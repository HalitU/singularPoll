// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using baseService.Models;

namespace baseService.Migrations
{
    [DbContext(typeof(PollContext))]
    partial class PollContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854");

            modelBuilder.Entity("baseService.Models.Comment", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("PollId");

                    b.Property<string>("Text");

                    b.HasKey("CommentId");

                    b.HasIndex("PollId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("baseService.Models.Poll", b =>
                {
                    b.Property<int>("PollId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("PollQuestion");

                    b.HasKey("PollId");

                    b.ToTable("Polls");
                });

            modelBuilder.Entity("baseService.Models.Result", b =>
                {
                    b.Property<int>("ResultId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<int>("PollId");

                    b.Property<int>("Votes");

                    b.HasKey("ResultId");

                    b.HasIndex("PollId");

                    b.ToTable("Results");
                });

            modelBuilder.Entity("baseService.Models.Comment", b =>
                {
                    b.HasOne("baseService.Models.Poll", "Poll")
                        .WithMany("Comments")
                        .HasForeignKey("PollId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("baseService.Models.Result", b =>
                {
                    b.HasOne("baseService.Models.Poll", "Poll")
                        .WithMany("Results")
                        .HasForeignKey("PollId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
